{
  "openapi": "3.0.3",
  "info": {
    "title": "Akkudoktor API",
    "description": "Willkommen bei der API von Akkudoktor. Diese API stellt deine Daten nach der OpenAPI 3.0-Spezifikation bereit und ist aktuell kostenlos. Du kannst dich aber auch an der API [registrieren](/account) oder mit dem [Forum-Login](/login) anmelden. Je nach Auslastung des Servers könnte es zu einer Einschränkung der kostenlosen Nutzung der API kommen. Bitte bedenkt, dass die Berechnung ziemlich viel Rechenpower und Datentransfer benötigt. Für einen kostenlosen Betrieb sind wir auf [Spenden]() angewiesen.\n\nDie Logik zur Berechnung haben wir mit freundlicher Unterstützung von [solXpect](https://f-droid.org/packages/org.woheller69.solxpect/) genutzt. Vielen Dank hierfür noch mal an Herrn Dr. Heller. \n\nWir werden die Funktionen der API verbessern und weiterentwickeln. \n\n\n\nEin paar interessante Links:\n- [Akkudoktor Forum](https://www.akkudoktor.net)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@akkudoktor.net"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Sourcecode",
    "url": "https://github.com/nick81nrw/solApi"
  },
  "servers": [
    {
      "url": "https://api.akkudoktor.net/"
    }
  ],
  "tags": [
    {
      "name": "pv generation calculation",
      "description": "generate pv generation data from weather forcast or archived data"
    },
    {
      "name": "prices",
      "description": "get hourly price information "
    },
    {
      "name": "Default Load Profiles",
      "description": "calculate load profiles for a special year "
    }
  ],
  "paths": {
    "/forecast": {
      "get": {
        "tags": [
          "pv generation calculation"
        ],
        "summary": "Get forcast data",
        "description": "get pv power from a location ",
        "operationId": "getForecast",
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "description": "latitude for location",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float",
              "example": 55.45
            }
          },
          {
            "name": "lon",
            "in": "query",
            "description": "longitude for location",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float",
              "example": 8.14
            }
          },
          {
            "name": "power",
            "in": "query",
            "description": "power pv modules in watts",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float",
              "example": 3400
            }
          },
          {
            "name": "azimuth",
            "in": "query",
            "description": "orientation of pv modules in azimuth in degree\n0 = south\n-45 = south-east\n-90 = east\n45 = south-west\n90 = west",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float",
              "example": -30
            }
          },
          {
            "name": "tilt",
            "in": "query",
            "description": "tilt of pv modules degree\n0 = flat / horizontal\n30 = 30° tilt (on a roof)\n90 = vertical (at a wall)",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float",
              "example": 35
            }
          },
          {
            "name": "past_days",
            "in": "query",
            "description": "days with calculated data up to 92 Days (3 months) ",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "timecycle",
            "in": "query",
            "description": "Change the used time cycles between 15 minutes and hourly.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "hourly",
                "minutely_15"
              ],
              "default": "hourly"
            }
          },
          {
            "name": "cellCoEff",
            "in": "query",
            "description": "cellcoefficient of your pv modules. It is used for calculate losses with the temperature of the modules. Value in percent.",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float",
              "default": -0.4
            }
          },
          {
            "name": "albedo",
            "in": "query",
            "description": "albedo value",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float",
              "default": 0.2
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "timezone. ",
            "required": false,
            "schema": {
              "type": "string",
              "default": "Europe/Berlin"
            }
          },
          {
            "name": "powerInverter",
            "in": "query",
            "description": "max power of the inverter in watts. it will used, if the power of the inverter is lower than the power generation of the modules. default: no limit",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float",
              "default": "[None]",
              "example": 5000
            }
          },
          {
            "name": "inverterEfficiency",
            "in": "query",
            "description": "inverter efficiency. default: 1 (=100%)",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float",
              "default": 1
            }
          },
          {
            "name": "range",
            "in": "query",
            "description": "returns max- and min generation from differnt weathermodels",
            "required": false,
            "schema": {
              "type": "number",
              "format": "int",
              "default": 0
            }
          },
          {
            "name": "horizont",
            "in": "query",
            "description": "horizont to calculate shading\nup to 360 values to describe shading sitiation for your pv. For this, you use can a comma separated string with obsticals hight in angle (-180 = north, -90 = east, 0 = south, 90 = east). Also transparency is optional supported with a \"t\" after angle <br/>\ne.g. <br />\n10,20,10,15 => -180..-90° azimuth + 10° tilt | -90°..0 azimuth + 20° tilt | ... <br/>\n10t0.3,15t0.8 =>  -180..0° azimuth + 10° tilt + 30% transparency | 0°..180 azimuth + 15° tilt + 80% transarency <br/>\n10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10 (18 x \"10\") => every 20° azimuth (360/18) with 10° tilt",
            "required": false,
            "schema": {
              "type": "string",
              "default": "[None]",
              "example": "10,15,20t30,0"
            }
          },
          {
            "name": "hourly",
            "in": "query",
            "description": "additional hourly data from open-meteo with \",\" splittet values. \nCheck https://open-meteo.com/en/docs/dwd-api",
            "required": false,
            "schema": {
              "type": "string",
              "default": "[None]",
              "example": "relativehumidity_2m,windspeed_10m"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              }
            }
          },
          "400": {
            "description": "Invalid"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/archive": {
      "get": {
        "tags": [
          "pv generation calculation"
        ],
        "summary": "Get archive data",
        "description": "get pv power from a location ",
        "operationId": "getArchive",
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "description": "latitude for location",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            },
            "example": 55.45
          },
          {
            "name": "lon",
            "in": "query",
            "description": "longitude for location",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            },
            "example": 8.14
          },
          {
            "name": "power",
            "in": "query",
            "description": "power pv modules in watts",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            },
            "example": 3400
          },
          {
            "name": "azimuth",
            "in": "query",
            "description": "orientation of pv modules in azimuth in degree\n0 = south\n-45 = south-east\n-90 = east\n45 = south-west\n90 = west",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            },
            "example": -30
          },
          {
            "name": "tilt",
            "in": "query",
            "description": "tilt of pv modules degree\n0 = flat / horizontal\n30 = 30° tilt (on a roof)\n90 = vertical (at a wall)",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            },
            "example": 35
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "date from which the data sould load. default 7 days before today",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2023-05-06"
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "date until which the data sould load. default yesterday",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2023-05-10"
          },
          {
            "name": "cellCoEff",
            "in": "query",
            "description": "cellcoefficient of your pv modules. It is used for calculate losses with the temperature of the modules. Value in percent. default: -0.4",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            },
            "example": -0.36
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "timezone. default: Europe/Berlin",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Europe/Berlin"
          },
          {
            "name": "powerInverter",
            "in": "query",
            "description": "max power of the inverter in watts. it will used, if the power of the inverter is lower than the power generation of the modules. default: no limit",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            },
            "example": 4500
          },
          {
            "name": "inverterEfficiency",
            "in": "query",
            "description": "inverter efficiency. default: 1 (=100%)",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float",
              "default": 1,
              "example": 0.95
            }
          },
          {
            "name": "hourly",
            "in": "query",
            "description": "additional hourly data from open-meteo with \",\" splittet values. \nCheck https://open-meteo.com/en/docs/dwd-api",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "example": "relativehumidity_2m,windspeed_10m"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              }
            }
          },
          "400": {
            "description": "Invalid"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/prices": {
      "get": {
        "tags": [
          "prices"
        ],
        "summary": "Get energy price data",
        "description": "get price data for a defined range",
        "operationId": "getPrices",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "start date or datetime. default: default: today 0 am",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "date": {
                "value": "2023-06-01"
              },
              "datetime": {
                "value": "2023-06-01T05:00:00"
              }
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "end date or datetime. default: default: today 12 pm",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "date": {
                "value": "2023-06-05"
              },
              "datetime": {
                "value": "2023-06-05T20:00:00"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prices"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Prices"
                }
              }
            }
          },
          "400": {
            "description": "Invalid"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/defaultloadprofile": {
      "get": {
        "tags": [
          "Default Load Profiles"
        ],
        "summary": "Get hourly power consumption from a german \"Standardlastprofil\" calculation",
        "description": "get price data for a defined range",
        "operationId": "getDefaultLoadProfile",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "the year which should calculated. default: actual year",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 2023
          },
          {
            "name": "consumption",
            "in": "query",
            "description": "power consumption in this year in kilowatthours",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 3500
          },
          {
            "name": "profile",
            "in": "query",
            "description": "which load profile shoult be used. Only \"SLPH0\" is implemented",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "SLPH0"
              ],
              "example": "SLPH0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultLoadProfiles"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultLoadProfiles"
                }
              }
            }
          },
          "400": {
            "description": "Invalid"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Forecast": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "format": "float",
                "example": 55.61
              },
              "lon": {
                "type": "number",
                "format": "float",
                "example": 55.61
              },
              "frequency": {
                "type": "string",
                "enum": [
                  "hourly",
                  "quarterhour"
                ],
                "example": "hourly"
              }
            }
          },
          "values": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "datetime": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-08-28T05:00:00.000Z"
                },
                "dcPower": {
                  "type": "number",
                  "format": "float",
                  "example": 3504.56
                },
                "power": {
                  "type": "number",
                  "format": "float",
                  "example": 3504.56
                },
                "minPower": {
                  "type": "number",
                  "format": "float",
                  "example": 2560.5
                },
                "maxPower": {
                  "type": "number",
                  "format": "float",
                  "example": 4201.5
                },
                "temprature": {
                  "type": "number",
                  "format": "float",
                  "description": "temprature in celsius",
                  "example": 15.4
                }
              }
            }
          }
        }
      },
      "Prices": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "start_timestamp": {
                "type": "number",
                "example": 1686866400000
              },
              "end_timestamp": {
                "type": "number",
                "example": 1686952800000
              },
              "start": {
                "type": "string",
                "example": "2023-06-15T22:00:00.000Z"
              },
              "end": {
                "type": "string",
                "example": "2023-06-16T22:00:00.000Z"
              }
            }
          },
          "values": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "start_timestamp": {
                  "type": "number",
                  "example": 1686866400000
                },
                "end_timestamp": {
                  "type": "number",
                  "example": 1686952800000
                },
                "marketprice": {
                  "type": "number",
                  "format": "float",
                  "description": "EEX price for one MWh",
                  "example": 126.16
                },
                "unit": {
                  "type": "string",
                  "example": "Eur/MWh"
                },
                "start": {
                  "type": "string",
                  "example": "2023-06-15T22:00:00.000Z"
                },
                "end": {
                  "type": "string",
                  "example": "2023-06-16T22:00:00.000Z"
                },
                "marketpriceEurocentPerKWh": {
                  "type": "number",
                  "format": "float",
                  "example": 12.62
                }
              }
            }
          }
        }
      },
      "DefaultLoadProfiles": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "year": {
                "type": "number",
                "example": 2023
              },
              "end_timestamp": {
                "type": "number",
                "example": 3500
              },
              "slp": {
                "type": "string",
                "example": "SLPH0"
              },
              "calculatedConsumption": {
                "type": "number",
                "format": "float",
                "example": 3490.552948059377
              }
            }
          },
          "values": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "example": "2023-01-01T01:00:00.000Z"
                },
                "power": {
                  "type": "number",
                  "format": "float",
                  "example": 200.16398226648312
                },
                "day": {
                  "type": "number",
                  "example": 1
                },
                "dayString": {
                  "type": "string",
                  "example": "Monday"
                }
              }
            }
          }
        }
      }
    }
  }
}